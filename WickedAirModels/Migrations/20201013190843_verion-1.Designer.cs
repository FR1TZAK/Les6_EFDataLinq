// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WickedAir.Models.Data;

namespace WickedAir.Models.Migrations
{
    [DbContext(typeof(WickedairContext))]
    [Migration("20201013190843_verion-1")]
    partial class verion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("syntra")
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WickedAir.Models.Data.AircraftType", b =>
                {
                    b.Property<byte>("TypeId")
                        .HasColumnName("TypeID")
                        .HasColumnType("tinyint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("AircraftType","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.AircraftTypeDetail", b =>
                {
                    b.Property<byte>("AircraftTypeId")
                        .HasColumnName("AircraftTypeID")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Tare")
                        .HasColumnType("smallint");

                    b.Property<byte?>("TurbineCount")
                        .HasColumnType("tinyint");

                    b.HasKey("AircraftTypeId");

                    b.ToTable("AircraftTypeDetail","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Airline", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Bunkrupt")
                        .HasColumnType("bit");

                    b.Property<int?>("FoundingYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short?>("Rating")
                        .HasColumnType("smallint");

                    b.HasKey("Code");

                    b.ToTable("Airline","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Booking", b =>
                {
                    b.Property<int>("FlightNo")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnName("PassengerID")
                        .HasColumnType("int");

                    b.HasKey("FlightNo", "PassengerId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Booking","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.DepartureGrouping", b =>
                {
                    b.Property<string>("Departure")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FlightCount")
                        .HasColumnType("int");

                    b.HasKey("Departure");

                    b.ToTable("DepartureGrouping","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Employee", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetailId")
                        .HasColumnName("DetailID")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnName("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlightHours")
                        .HasColumnType("int");

                    b.Property<string>("FlightSchool")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LicenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PilotLicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<int?>("SupervisorPersonId")
                        .HasColumnName("SupervisorPersonID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.HasIndex("DetailId");

                    b.HasIndex("SupervisorPersonId");

                    b.ToTable("Employee","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Flight", b =>
                {
                    b.Property<int>("FlightNo")
                        .HasColumnType("int");

                    b.Property<byte?>("AircraftTypeId")
                        .HasColumnName("AircraftTypeID")
                        .HasColumnType("tinyint");

                    b.Property<string>("AirlineCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("CopilotId")
                        .HasColumnType("int");

                    b.Property<string>("Departure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'(not set)')")
                        .HasMaxLength(50);

                    b.Property<string>("Destination")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'(not set)')")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FlightDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<short?>("FreeSeats")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NonSmokingFlight")
                        .HasColumnType("bit");

                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((123.45))");

                    b.Property<short>("Seats")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Strikebound")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Utilization")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("numeric(20, 8)")
                        .HasComputedColumnSql("((100.0)-(([FreeSeats]*(1.0))/[Seats])*(100.0))");

                    b.HasKey("FlightNo");

                    b.HasIndex("AircraftTypeId");

                    b.HasIndex("AirlineCode");

                    b.HasIndex("CopilotId");

                    b.HasIndex("FreeSeats")
                        .HasName("Index_FreeSeats");

                    b.HasIndex("PilotId");

                    b.HasIndex("Departure", "Destination");

                    b.ToTable("Flight","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Passenger", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomerSince")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetailId")
                        .HasColumnName("DetailID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FrequentFlyer")
                        .HasColumnType("bit");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.HasIndex("DetailId");

                    b.ToTable("Passenger","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Persondetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Planet")
                        .HasColumnType("nvarchar(130)")
                        .HasMaxLength(130);

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Persondetail","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.VDepartureStatistics", b =>
                {
                    b.Property<string>("Departure")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FlightCount")
                        .HasColumnType("int");

                    b.HasKey("Departure");

                    b.ToTable("V_DepartureStatistics","dbo");
                });

            modelBuilder.Entity("WickedAir.Models.Data.AircraftTypeDetail", b =>
                {
                    b.HasOne("WickedAir.Models.Data.AircraftType", "AircraftType")
                        .WithOne("AircraftTypeDetail")
                        .HasForeignKey("WickedAir.Models.Data.AircraftTypeDetail", "AircraftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WickedAir.Models.Data.Booking", b =>
                {
                    b.HasOne("WickedAir.Models.Data.Flight", "FlightNoNavigation")
                        .WithMany("Booking")
                        .HasForeignKey("FlightNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WickedAir.Models.Data.Passenger", "Passenger")
                        .WithMany("Booking")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WickedAir.Models.Data.Employee", b =>
                {
                    b.HasOne("WickedAir.Models.Data.Persondetail", "Detail")
                        .WithMany("Employee")
                        .HasForeignKey("DetailId");

                    b.HasOne("WickedAir.Models.Data.Employee", "SupervisorPerson")
                        .WithMany("InverseSupervisorPerson")
                        .HasForeignKey("SupervisorPersonId");
                });

            modelBuilder.Entity("WickedAir.Models.Data.Flight", b =>
                {
                    b.HasOne("WickedAir.Models.Data.AircraftType", "AircraftType")
                        .WithMany("Flight")
                        .HasForeignKey("AircraftTypeId");

                    b.HasOne("WickedAir.Models.Data.Airline", "AirlineCodeNavigation")
                        .WithMany("Flight")
                        .HasForeignKey("AirlineCode");

                    b.HasOne("WickedAir.Models.Data.Employee", "Copilot")
                        .WithMany("FlightCopilot")
                        .HasForeignKey("CopilotId");

                    b.HasOne("WickedAir.Models.Data.Employee", "Pilot")
                        .WithMany("FlightPilot")
                        .HasForeignKey("PilotId")
                        .IsRequired();
                });

            modelBuilder.Entity("WickedAir.Models.Data.Passenger", b =>
                {
                    b.HasOne("WickedAir.Models.Data.Persondetail", "Detail")
                        .WithMany("Passenger")
                        .HasForeignKey("DetailId");
                });
#pragma warning restore 612, 618
        }
    }
}
